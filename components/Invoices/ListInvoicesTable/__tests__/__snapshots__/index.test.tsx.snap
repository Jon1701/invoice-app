// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ListInvoicesTable /> with empty invoices prop it should render without errors 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="sc-ftTHYK kpkkbv"
      >
        No invoices found.
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="sc-ftTHYK kpkkbv"
    >
      No invoices found.
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`<ListInvoicesTable /> with prop invoices set to sample data it should render without errors 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <table
        class="sc-eDvSVe efzZSJ"
      >
        <tr
          class="sc-gKPRtg iZLckb"
        >
          <th
            class="sc-jSUZER ebMnHH"
          >
            ID
          </th>
          <th
            class="sc-jSUZER ebMnHH"
          >
            Status
          </th>
          <th
            class="sc-jSUZER ebMnHH"
          >
            Client Name
          </th>
          <th
            class="sc-jSUZER ebMnHH"
          >
            Amount
          </th>
        </tr>
        <tr
          class="sc-gKPRtg iZLckb"
        >
          <td
            class="sc-iBYQkv dUNxtU"
          >
            1
          </td>
          <td
            class="sc-iBYQkv dUNxtU"
          >
            <span
              class="sc-bcXHqe sc-gswNZR grKKXY gVoFOn"
            >
              Draft
            </span>
          </td>
          <td
            class="sc-iBYQkv dUNxtU"
          >
            Jonathan Archer
          </td>
          <td
            class="sc-iBYQkv dUNxtU"
          >
            <span>
              $131,178.00
            </span>
          </td>
        </tr>
        <tr
          class="sc-gKPRtg iZLckb"
        >
          <td
            class="sc-iBYQkv dUNxtU"
          >
            2
          </td>
          <td
            class="sc-iBYQkv dUNxtU"
          >
            <span
              class="sc-bcXHqe sc-dkrFOg grKKXY hRcOVh"
            >
              Pending
            </span>
          </td>
          <td
            class="sc-iBYQkv dUNxtU"
          >
            Hikaru Sulu
          </td>
          <td
            class="sc-iBYQkv dUNxtU"
          >
            <span>
              $3,445,391.00
            </span>
          </td>
        </tr>
        <tr
          class="sc-gKPRtg iZLckb"
        >
          <td
            class="sc-iBYQkv dUNxtU"
          >
            3
          </td>
          <td
            class="sc-iBYQkv dUNxtU"
          >
            <span
              class="sc-bcXHqe sc-dkrFOg grKKXY hRcOVh"
            >
              Pending
            </span>
          </td>
          <td
            class="sc-iBYQkv dUNxtU"
          >
            Jean-Luc Picard
          </td>
          <td
            class="sc-iBYQkv dUNxtU"
          >
            <span>
              ¥292,583,700
            </span>
          </td>
        </tr>
        <tr
          class="sc-gKPRtg iZLckb"
        >
          <td
            class="sc-iBYQkv dUNxtU"
          >
            4
          </td>
          <td
            class="sc-iBYQkv dUNxtU"
          >
            <span
              class="sc-bcXHqe sc-hLBbgP grKKXY divHvX"
            >
              Paid
            </span>
          </td>
          <td
            class="sc-iBYQkv dUNxtU"
          >
            William T. Riker
          </td>
          <td
            class="sc-iBYQkv dUNxtU"
          >
            <span>
              $0.00
            </span>
          </td>
        </tr>
      </table>
    </div>
  </body>,
  "container": <div>
    <table
      class="sc-eDvSVe efzZSJ"
    >
      <tr
        class="sc-gKPRtg iZLckb"
      >
        <th
          class="sc-jSUZER ebMnHH"
        >
          ID
        </th>
        <th
          class="sc-jSUZER ebMnHH"
        >
          Status
        </th>
        <th
          class="sc-jSUZER ebMnHH"
        >
          Client Name
        </th>
        <th
          class="sc-jSUZER ebMnHH"
        >
          Amount
        </th>
      </tr>
      <tr
        class="sc-gKPRtg iZLckb"
      >
        <td
          class="sc-iBYQkv dUNxtU"
        >
          1
        </td>
        <td
          class="sc-iBYQkv dUNxtU"
        >
          <span
            class="sc-bcXHqe sc-gswNZR grKKXY gVoFOn"
          >
            Draft
          </span>
        </td>
        <td
          class="sc-iBYQkv dUNxtU"
        >
          Jonathan Archer
        </td>
        <td
          class="sc-iBYQkv dUNxtU"
        >
          <span>
            $131,178.00
          </span>
        </td>
      </tr>
      <tr
        class="sc-gKPRtg iZLckb"
      >
        <td
          class="sc-iBYQkv dUNxtU"
        >
          2
        </td>
        <td
          class="sc-iBYQkv dUNxtU"
        >
          <span
            class="sc-bcXHqe sc-dkrFOg grKKXY hRcOVh"
          >
            Pending
          </span>
        </td>
        <td
          class="sc-iBYQkv dUNxtU"
        >
          Hikaru Sulu
        </td>
        <td
          class="sc-iBYQkv dUNxtU"
        >
          <span>
            $3,445,391.00
          </span>
        </td>
      </tr>
      <tr
        class="sc-gKPRtg iZLckb"
      >
        <td
          class="sc-iBYQkv dUNxtU"
        >
          3
        </td>
        <td
          class="sc-iBYQkv dUNxtU"
        >
          <span
            class="sc-bcXHqe sc-dkrFOg grKKXY hRcOVh"
          >
            Pending
          </span>
        </td>
        <td
          class="sc-iBYQkv dUNxtU"
        >
          Jean-Luc Picard
        </td>
        <td
          class="sc-iBYQkv dUNxtU"
        >
          <span>
            ¥292,583,700
          </span>
        </td>
      </tr>
      <tr
        class="sc-gKPRtg iZLckb"
      >
        <td
          class="sc-iBYQkv dUNxtU"
        >
          4
        </td>
        <td
          class="sc-iBYQkv dUNxtU"
        >
          <span
            class="sc-bcXHqe sc-hLBbgP grKKXY divHvX"
          >
            Paid
          </span>
        </td>
        <td
          class="sc-iBYQkv dUNxtU"
        >
          William T. Riker
        </td>
        <td
          class="sc-iBYQkv dUNxtU"
        >
          <span>
            $0.00
          </span>
        </td>
      </tr>
    </table>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
